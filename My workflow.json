{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {
          "download": true
        }
      },
      "id": "983835f4-9af4-4d2d-adcd-2e121c1aefb1",
      "name": "telegramInput",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        -1456,
        688
      ],
      "webhookId": "f56e8e22-975e-4f9a-a6f9-253ebc63668d",
      "typeVersion": 1.1,
      "credentials": {
        "telegramApi": {
          "id": "sSQpMmQepGqohEEB",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const body = $json; // из Telegram Trigger\n\nconst message = body.message || body.Message || {};\nif (!message) return { json: { error: 'No message found' } };\n\nconst chatId = message.chat.id;\nconst userId = message.from.id;\nconst username = message.from.username || message.from.first_name || 'User';\n\nlet messageText = '';\nlet messageType = 'text';\nlet fileId = null;\nlet fileMimeType = null;\nlet filePath = null;\nlet fileUniqueId = null;\n\n// Определяем тип сообщения и подготавливаем fileId\nif (message.text) {\n  messageText = message.text;\n  messageType = 'text';\n} else if (message.voice) {\n  messageType = 'voice';\n  fileId = message.voice.file_id;\n  fileMimeType = message.voice.mime_type;\n  messageText = '[Голосовое сообщение]';\n} else if (message.audio) {\n  messageType = 'audio';\n  fileId = message.audio.file_id;\n  fileMimeType = message.audio.mime_type;\n  messageText = '[Аудио сообщение]';\n} else if (message.document) {\n  messageType = 'document';\n  fileId = message.document.file_id;\n  fileMimeType = message.document.mime_type;\n  messageText = `[Документ: ${message.document.file_name || 'unknown'}]`;\n} else if (message.photo) {\n  messageType = 'photo';\n  const photos = message.photo;\n  fileId = photos[photos.length - 1].file_id;\n  messageText = '[Фотография]';\n} else {\n  messageText = '[Неподдерживаемый тип сообщения]';\n}\n\n// Основной JSON объект\nconst jsonOutput = {\n  chatId,\n  userId,\n  username,\n  messageText,\n  messageType,\n  fileId,\n  fileMimeType,\n  originalMessage: message\n};\n\n// Вернём и бинарный объект, если есть fileId\nif (fileId) {\n  return {\n    json: jsonOutput,\n    binary: {\n      data: {\n        fileId,\n        mimeType: fileMimeType || 'application/octet-stream'\n        // ⚠️ здесь ещё не сам файл, а подготовка — файл будет загружен в `Get a file`\n      }\n    }\n  };\n}\n\nreturn {\n  json: jsonOutput\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1280,
        688
      ],
      "id": "6af7235d-567a-4d0a-93e0-0ee62fbfde75",
      "name": "Код котоый писал с gpt"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.parsed.command }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "70e88a17-44b3-47c1-8dd5-ece09bc7ace1"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Старт"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1582f1d4-572e-4fec-b88e-3cd0e79eae69",
                    "leftValue": "={{ $json.parsed.command }}",
                    "rightValue": "/tarif",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Моя подписка"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6a14430e-6ef1-432e-bab6-4651dae737e5",
                    "leftValue": "={{ $json.parsed.command }}",
                    "rightValue": "/oplata",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Как оплатить подписку"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "79b01c46-3ec6-417d-93d7-50b3609d6b0e",
                    "leftValue": "={{ $json.parsed.command }}",
                    "rightValue": "/dobavit",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Добавить клиента"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c22c1149-65aa-4973-a0b8-dddbd2431e00",
                    "leftValue": "={{ $json.parsed.command }}",
                    "rightValue": "/klienty",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Мои клиенты"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a1bb625b-e9be-401e-9694-d0fb44193260",
                    "leftValue": "={{ $json.parsed.command }}",
                    "rightValue": "/yurist",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Вопрос ИИ юристу"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "01dc09b6-e149-4126-96fb-b6fa45fa2729",
                    "leftValue": "={{ $json.parsed.command }}",
                    "rightValue": "/podderzhka",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Поддержка"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "645ddd43-af3e-45a2-85ba-c71e07a074eb",
                    "leftValue": "={{ $json.parsed.command }}",
                    "rightValue": "/general",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Обычное сообщение"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1200,
        80
      ],
      "id": "20870aa8-04c3-43c6-8e1b-8d8d471d0dda",
      "name": "Переключатель команд",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messageText || $json.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=System Prompt (for AI Agent):\n\nYou are an AI assistant in a Telegram bot for real estate agents.\nYour task is to analyze the user message and determine what the user wants.\nRecognize whether the message is a command or a general request, and return the result in JSON format.\n\nTelegram bot supports these commands:\n\n/start — start or register\n\n/help — show help\n\n/tarif — show tariffs\n\n/oplata — show payment info\n\n/dobavit — add a client or property\n\n/klienty — show client list\n\n/yurist — legal question\n\n/podderzhka — support request\n\n/general — general message\n\nYou also know about the user:\n\nFirst name: {{ $('telegramInput').item.json.message.from.first_name }}\n\nLast name: {{ $('telegramInput').item.json.message.from.last_name }}\n\nUsername: {{ $('telegramInput').item.json.message.from.username }}\n\nSubscription: \n\nIf the subscription is inactive, provide a simple reply and mention that some features are locked.\n\nIf the subscription is active, allow access to full functionality and offer deeper help."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -480,
        592
      ],
      "id": "4b825b69-6d2c-4e31-bd1a-2aaa1896c76a",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {
          "maxTokens": 500,
          "responseFormat": "text",
          "temperature": 0.4
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -576,
        752
      ],
      "id": "4d76a973-3da2-4c81-870a-d2ac5cef9895",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "IQqTXAH1NN8ixph6",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Переключатель голосового и текста').item.json.userId }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "4be3756a-1545-46d2-8223-c2c43b3c69e8",
      "name": "telegramResponse",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1728,
        800
      ],
      "webhookId": "ff71ba7e-affa-4952-90a5-6bb7f37a5598",
      "typeVersion": 1.2,
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3cf4ed27-5b47-40a5-a9e7-71365267ed78",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1088,
        480
      ],
      "id": "af6ecc63-f799-4076-9b67-65ab97f606cd",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.fileId }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1456,
        480
      ],
      "id": "3f4da8d5-7d84-46d3-b751-752bb43e8396",
      "name": "Get a file",
      "webhookId": "e57aff78-6bd3-4d5c-b6d0-f8049172166a",
      "credentials": {
        "telegramApi": {
          "id": "sSQpMmQepGqohEEB",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1280,
        480
      ],
      "id": "78886276-fa22-4df6-b5df-da2f8f3e836c",
      "name": "Transcribe a recording",
      "credentials": {
        "openAiApi": {
          "id": "IQqTXAH1NN8ixph6",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.originalMessage.voice.mime_type }}",
                    "rightValue": "={{ $json.originalMessage.voice.file_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "79328c7a-3b5a-4f2f-8fd8-00023df5d48e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Голосовое "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f16e36ff-4140-45e6-9f53-41ea5bed1805",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "=text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Текстовое"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1819617b-2495-4ac7-94ba-207a3bcee689",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Фотография"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ca3ddd24-8eba-45bc-a4ae-a1050774347e",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Документ"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1088,
        656
      ],
      "id": "332423c6-19a1-41f1-8f29-922fab708cc3",
      "name": "Переключатель голосового и текста"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        880,
        624
      ],
      "id": "78e76685-41e7-4968-b8c1-af2388c3652a",
      "name": "AI Agent1",
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "cafc40ea-1654-41de-83f9-1b435979cb6d"
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1184,
        640
      ],
      "id": "8c8bf3cc-4396-4820-bbea-d954c8c6ff9e",
      "name": "Switch",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6c5945be-f353-4600-8f03-524a2cb2ce61",
              "name": "parsed",
              "value": "={{ JSON.parse($json.output.replace(/^```json|```$/g, '').trim()) }}",
              "type": "object"
            },
            {
              "id": "4c57d5c6-5d32-4a25-bf31-51a2a6f92f74",
              "name": "subscription_date",
              "value": "01.08.2025",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        992,
        128
      ],
      "id": "21b7afbf-6b3f-4f5f-ab22-8c958b5876f2",
      "name": "Edit Fields1",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3a816daa-8004-4b73-827e-ed8dede2fc44",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1392,
        640
      ],
      "id": "894e4bf1-62db-4a64-858c-dc377d0e0b28",
      "name": "If",
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Переключатель голосового и текста').item.json.userId }}",
        "text": "=Привет, {{ $('Код котоый писал с gpt').item.json.originalMessage.from.first_name }} 👋  \nЯ твой AI‑помощник риелтора.\nЧем я могу помочь:\n- Вести CRM‑систему по клиентам: сохранять данные, контакты и потребности.\n- Отвечать на юридические вопросы по недвижимости.\n- Вести свободный чат‑диалог с ИИ (в бесплатной версии — до 10 запросов).\n- Давать полезные и точные ответы, подсказывать и сопровождать сделки.\n- Мягко напоминать о преимуществах и возможностях подписки.\n\nДоступные команды:\n/start — приветствие\n/tarif — моя подписка\n/oplata — как оплатить (инструкция по оплате)\n/dobavit — добавить клиента (только по подписке)\n/klienty — мои клиенты (только по подписке)\n/yurist — юридический вопрос (до 10 бесплатных, далее по подписке)\n/podderzhka — поддержка (связаться напрямую)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": " Моя подписка",
                    "additionalFields": {
                      "callback_data": "/tarif"
                    }
                  },
                  {
                    "text": "Как оплатить",
                    "additionalFields": {
                      "callback_data": "/oplata"
                    }
                  },
                  {
                    "text": "Поддержка",
                    "additionalFields": {
                      "callback_data": "/podderzhka"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "b685cab8-6b8c-4e68-86a7-d90a4cb3d609",
      "name": "telegramResponse1",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1200,
        -320
      ],
      "webhookId": "ff71ba7e-affa-4952-90a5-6bb7f37a5598",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "sSQpMmQepGqohEEB",
          "name": "Telegram account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ed0335f3-37ff-43ea-b63b-13c73f15dafd",
              "leftValue": "={{ $json.parsed.user.subscription }}",
              "rightValue": "={{ $json.parsed.user.subscription }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "78ec1e02-09b0-4af5-9f6d-c8148c22c678",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1216,
        -176
      ],
      "id": "fc9f7f76-2848-410c-86dc-82785d0102aa",
      "name": "If1",
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Переключатель голосового и текста').item.json.userId }}",
        "text": "=Ваша подписка активна ✅\n\nДоступно:\n• Добавление клиентов в CRM.\n• Просмотр базы клиентов.\n• Юридическая поддержка.\n• Безлимитный чат с ИИ.\n\nДата окончания: {{ $json.subscription_date }}.\n\nПродлевать подписку заранее не требуется — она продлевается автоматически.",
        "replyMarkup": "inlineKeyboard",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "137b1909-07ee-42ea-91ad-5c37be8b1801",
      "name": "telegramResponse2",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1200,
        -496
      ],
      "webhookId": "ff71ba7e-affa-4952-90a5-6bb7f37a5598",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "sSQpMmQepGqohEEB",
          "name": "Telegram account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Переключатель голосового и текста').item.json.userId }}",
        "text": "=❌ У вас нет активной подписки.\n\nЧтобы получить доступ ко всем функциям:\n• Добавление и хранение клиентов.\n• Юридическая помощь.\n• Безлимитный чат с ИИ.\n\nОформите подписку прямо сейчас ⬇️",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Как оплатить",
                    "additionalFields": {
                      "callback_data": "/oplata"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "46bc7785-433e-4448-a39f-f50b53ea5a40",
      "name": "telegramResponse3",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1424,
        -320
      ],
      "webhookId": "ff71ba7e-affa-4952-90a5-6bb7f37a5598",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "sSQpMmQepGqohEEB",
          "name": "Telegram account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "tableId": "Входящие сообщения",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "chat_id",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.chatId }}"
            },
            {
              "fieldId": "username",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.username }}"
            },
            {
              "fieldId": "first_name",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.originalMessage.from.first_name }}"
            },
            {
              "fieldId": "last_name",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.originalMessage.from.last_name }}"
            },
            {
              "fieldId": "message_text",
              "fieldValue": "={{ $json.originalMessage.text }} {{ $json.text }}"
            },
            {
              "fieldId": "source (текст человека)",
              "fieldValue": "={{ $json.text }}{{ $json.messageText }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.messageType }}"
            },
            {
              "fieldId": "message_text",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.messageText }}"
            },
            {
              "fieldId": "voice_file_url",
              "fieldValue": "={{ $('telegramInput').item.json.message.voice.file_id }}\n{{ $('telegramInput').item.json.message.voice.mime_type }}\n{{ $('telegramInput').item.json.message.voice.file_unique_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -720,
        592
      ],
      "id": "090f7ace-fcda-4fb0-9cf5-17f0daf317a7",
      "name": "Create a row",
      "credentials": {
        "supabaseApi": {
          "id": "3dSix4D2dnGnbVYA",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "Входящие сообщения",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "chat_id",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.chatId }}"
            },
            {
              "fieldId": "username",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.username }}"
            },
            {
              "fieldId": "first_name",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.originalMessage.from.first_name }}"
            },
            {
              "fieldId": "last_name",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.originalMessage.from.last_name }}"
            },
            {
              "fieldId": "message_text",
              "fieldValue": "={{ $json.originalMessage.text }} {{ $json.text }}"
            },
            {
              "fieldId": "source (текст человека)",
              "fieldValue": "={{ $json.text }}{{ $json.messageText }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.messageType }}"
            },
            {
              "fieldId": "message_text",
              "fieldValue": "={{ $('Код котоый писал с gpt').item.json.messageText }}"
            },
            {
              "fieldId": "voice_file_url",
              "fieldValue": "={{ $('telegramInput').item.json.message.voice.file_id }}\n{{ $('telegramInput').item.json.message.voice.mime_type }}\n{{ $('telegramInput').item.json.message.voice.file_unique_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -32,
        592
      ],
      "id": "71ca9f0c-ce07-423c-be5a-8e3f7d8b5b50",
      "name": "Create a row1",
      "credentials": {
        "supabaseApi": {
          "id": "3dSix4D2dnGnbVYA",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -448,
        848
      ],
      "id": "6e49f911-e713-4396-bb66-44430741c262",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "qMcwzMfqhlEvWtdc",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "tableName": {
          "__rl": true,
          "value": "agent_memory (память агента)",
          "mode": "list",
          "cachedResultName": "agent_memory (память агента)"
        },
        "topK": 50,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        -176,
        912
      ],
      "id": "07a8c4d5-2c08-42ec-bc50-199e1da5bde0",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "3dSix4D2dnGnbVYA",
          "name": "Supabase account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "telegramInput": {
      "main": [
        [
          {
            "node": "Код котоый писал с gpt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Код котоый писал с gpt": {
      "main": [
        [
          {
            "node": "Переключатель голосового и текста",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Переключатель команд": {
      "main": [
        [
          {
            "node": "telegramResponse1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Create a row1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Переключатель голосового и текста": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Переключатель команд",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "telegramResponse2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "telegramResponse3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a row": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d7a71070-c796-46b5-a9ee-863e8b67a834",
  "meta": {
    "instanceId": "ef71bb3d1c93744862ef66d85bc5b3a8e66e8d75471017e8bb0eb846eaec64ec"
  },
  "id": "vvbBISuRC9n2gcdi",
  "tags": []
}